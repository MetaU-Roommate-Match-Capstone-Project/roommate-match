// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Cleanliness {
  VERY_DIRTY
  DIRTY
  MEDIUM
  CLEAN
  VERY_CLEAN
}

enum Pets {
  NO_PETS
  CATS_ONLY
  DOGS_ONLY
  CATS_AND_DOGS
  OKAY_WITH_ANY_PET
}

enum GenderPreference {
  NO_PREFERENCE
  MALE
  FEMALE
  NONBINARY
}

enum RoomType {
  PRIVATE_ROOM_IN_APARTMENT
  SHARED_ROOM
  PRIVATE_ROOM_IN_HOUSE
}

enum SleepSchedule {
  EARLY_RISER
  LATE_SLEEPER
  NO_PREFERENCE
}

enum NoiseTolerance {
  QUIET
  SOMEWHAT_QUIET
  SOMEWHAT_NOISY
  NOISY
}

enum Socialness {
  LONER
  SOMEWHAT_SOCIAL
  SOCIAL
  VERY_SOCIAL
}

model User {
  id                 Int              @id @default(autoincrement())
  name               String
  email              String
  password           String
  dob                DateTime
  gender             String
  profile_picture    Bytes?
  intern_or_new_grad String
  budget_min         Int
  budget_max         Int
  university         String
  company            String
  group_id           Int              @default(0)
  roommate_profile   RoommateProfile?
  posts              Post[]
}

model RoommateProfile {
  id                        Int              @id @default(autoincrement())
  user                      User             @relation(fields: [user_id], references: [id])
  user_id                   Int              @unique
  city                      String
  state                     String
  cleanliness               Cleanliness
  smokes                    Boolean
  pets                      Pets
  gender_preference         GenderPreference
  room_type                 RoomType
  num_roommates             Int
  lease_duration            Int
  move_in_date              DateTime
  sleep_schedule            SleepSchedule
  noise_tolerance           NoiseTolerance
  socialness                Socialness
  hobbies                   String
  favorite_music            String
  bio                       String

  cleanliness_weight        Decimal?          @db.Decimal(3, 2)
  smokes_weight             Decimal?          @db.Decimal(3, 2)
  pets_weight               Decimal?          @db.Decimal(3, 2)
  gender_preference_weight  Decimal?          @db.Decimal(3, 2)
  room_type_weight          Decimal?          @db.Decimal(3, 2)
  num_roommates_weight      Decimal?          @db.Decimal(3, 2)
  sleep_schedule_weight     Decimal?          @db.Decimal(3, 2)
  noise_tolerance_weight    Decimal?          @db.Decimal(3, 2)
  socialness_weight         Decimal?          @db.Decimal(3, 2)
  hobbies_weight            Decimal?          @db.Decimal(3, 2)
  favorite_music_weight     Decimal?          @db.Decimal(3, 2)
}

model Post {
  id                Int              @id @default(autoincrement())
  user              User             @relation(fields: [user_id], references: [id])
  user_id           Int
  city              String
  state             String
  content           String
  pictures          Picture[]
}

model Picture {
  id                Int              @id @default(autoincrement())
  post              Post             @relation(fields: [post_id], references: [id])
  post_id           Int
  image             Bytes
}
